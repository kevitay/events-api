image: openjdk:11

stages:
  - build
  - test
  - dockerize
  - deploy

build:
  stage: build
  only:
    refs:
      - merge_requests
      - main
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - build/libs/*.jar
test:
  stage: test
  only:
    refs:
      - merge_requests
      - main
  script:
    ./gradlew test
  artifacts:
    paths:
      - build/test-results/test/TEST*.xml
dockerize:
  image: docker:20
  stage: dockerize
  services:
    - docker:dind
  before_script:
    - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  only:
    refs: # We only want to build this image after we merged into main/master
      - main
      - master
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID"
    - docker tag "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" "$CI_REGISTRY_IMAGE":"latest"
    - docker push "$CI_REGISTRY_IMAGE":"latest"
deploy:
  stage: deploy
  image: $BASE_AWS_EKS_IMAGE
  only:
    refs: # We only want to deploy after we build the image
      - main
      - master
  before_script:
    - export IMAGE="$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID"
    - aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
    - aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
    - aws configure set region us-west-2
    - aws configure set output json
    - aws eks update-kubeconfig --name "$CLUSTER_NAME"
    - aws sts get-caller-identity

  script:
    - envsubst < k8s/event-api-deploy.yaml | kubectl apply -f -
    - kubectl apply -f k8s/event-api-service.yaml